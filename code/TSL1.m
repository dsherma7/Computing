function [x] = TSL1(T,Z)
    tf = @(t,z,x1,x2) (t+z.*x2-x1.*x2)./(1+x2.^2);
    F = @(x1,x2) sum((T-tf(T,Z,x1,x2)).^2+(Z-(x1+x2.*tf(T,Z,x1,x2))).^2);
    dFx = @(x1,x2) -2*sum((T-tf(T,Z,x1,x2)).*(x2./(1+x2.^2))+(Z-x1-x2.*tf(T,Z,x1,x2)));
    dFy = @(x1,x2) -2*sum((T-tf(T,Z,x1,x2)).*((Z-x1).*(1+x2.^2)-2*x2.*(T+Z.*x2-x1.*x2)) ...
            ./(1+x2.^2).^2 +tf(T,Z,x1,x2).*(Z-x1-x2.*tf(T,Z,x1,x2)));
    dF = @(x1,x2) [dFx(x1,x2);dFy(x1,x2)];
    %d2F = @(x1,x2) [[diff(dFx,[x1;x2],1) diff(dFy,[x1;x2],1)];
     %               [diff(dFx,[x1;x2],2) diff(dFy,[x1;x2],2)]];
    
    d2F = @(x1,x2) [[sum(2./(x2.^4 + 2*x2.^2 + 1)) ...
                    sum((-6*T.*x2.^2 + 2*T - 8*x1.*x2 + 8*x2.*Z)./(x2.^6 + 3*x2.^4 + 3*x2.^2 + 1))]; 
                    [sum((-6*T.*x2.^2 + 2*T - 8*x1.*x2 + 8*x2.*Z)./(x2.^6 + 3*x2.^4 + 3*x2.^2 + 1)) ...
                     sum(2*(-9*T.^2.*x2.^4 + 4*T.^2.*x2.^2 + T.^2 + 4*T.*x1.*x2.^5 - 20*T.*x1.*x2.^3 ...
                         - 4*T.*x2.^5.*Z + 20*T.*x2.^3.*Z + 6*x1.^2.*x2.^4 - 6*x1.^2*x2.^2 - 12.*x1.*x2.^4*Z ...
                         + 12*x1.*x2.^2.*Z + 6*x2.^4.*Z.^2 - 6*x2.^2.*Z.^2)./(x2.^8 + 4*x2.^6 + 6*x2.^4 + 4*x2.^2 + 1))]];
    %x = Steepest(F,dF,[0,1.4]);
    x = Newtons(dF,d2F,[-0.5,10]);     
end